%% Const vars
% time steps
t = linspace(0,3.2,200);

% speed
a = 0.75;

% dist between wheels
d = 0.24; % meters

%% generalized vector equations in terms of a,d, and t

% parametric squiggle
r = [0.3960*cos(2.65*((a*t)+1.4));-0.99*sin((a*t) + 1.4);0*t];

% v full
vfull = [(-0.10494E1).*a.*sin(0.371E1+0.265E1.*a.*t);(-0.99E0).*a.*cos( ...
  0.14E1+a.*t);0*t];

% velocity magnitude
v = abs(a).^(-2).*(a.^6.*(0.1E1.*cos(0.14E1+a.*t).^2+0.11236E1.*sin( ...
  0.371E1+0.265E1.*a.*t).^2).^(-6).*(0.2809E1.*cos(0.14E1+a.*t).^5.* ...
  cos(0.371E1+0.265E1.*a.*t)+0.106E1.*cos(0.14E1+a.*t).^4.*sin( ...
  0.14E1+a.*t).*sin(0.371E1+0.265E1.*a.*t)+0.631238E1.*cos(0.14E1+ ...
  a.*t).^3.*cos(0.371E1+0.265E1.*a.*t).*sin(0.371E1+0.265E1.*a.*t) ...
  .^2+0.238203E1.*cos(0.14E1+a.*t).^2.*sin(0.14E1+a.*t).*sin( ...
  0.371E1+0.265E1.*a.*t).^3+0.35463E1.*cos(0.14E1+a.*t).*cos( ...
  0.371E1+0.265E1.*a.*t).*sin(0.371E1+0.265E1.*a.*t).^4+0.133823E1.* ...
  sin(0.14E1+a.*t).*sin(0.371E1+0.265E1.*a.*t).^5).^2).^(1/2);

% angular vel magnitude
w = a.^3.*abs(a).^(-2).*(0.1E1.*cos(0.14E1+a.*t).^2+ ...
  0.11236E1.*sin(0.371E1+0.265E1.*a.*t).^2).^(-3).*((-0.2809E1).* ...
  cos(0.14E1+a.*t).^5.*cos(0.371E1+0.265E1.*a.*t)+(-0.106E1).*cos( ...
  0.14E1+a.*t).^4.*sin(0.14E1+a.*t).*sin(0.371E1+0.265E1.*a.*t)+( ...
  -0.631238E1).*cos(0.14E1+a.*t).^3.*cos(0.371E1+0.265E1.*a.*t).* ...
  sin(0.371E1+0.265E1.*a.*t).^2+(-0.238203E1).*cos(0.14E1+a.*t).^2.* ...
  sin(0.14E1+a.*t).*sin(0.371E1+0.265E1.*a.*t).^3+(-0.35463E1).*cos( ...
  0.14E1+a.*t).*cos(0.371E1+0.265E1.*a.*t).*sin(0.371E1+0.265E1.*a.* ...
  t).^4+(-0.133823E1).*sin(0.14E1+a.*t).*sin(0.371E1+0.265E1.*a.*t) ...
  .^5);

% That vector in room coordinate system
That = [(-0.10494E1).*a.*abs(a).^(-1).*sin(0.371E1+0.265E1.*a.*t).*( ...
  0.9801E0.*cos(0.14E1+a.*t).^2+0.110124E1.*sin(0.371E1+0.265E1.*a.* ...
  t).^2).^(-1/2);(-0.99E0).*a.*abs(a).^(-1).*cos(0.14E1+a.*t).*( ...
  0.9801E0.*cos(0.14E1+a.*t).^2+0.110124E1.*sin(0.371E1+0.265E1.*a.* ...
  t).^2).^(-1/2);0*t];

% Nhat vector in room coordinate system
Nhat = [cos(0.14E1+a.*t).*((-0.278091E1).*cos(0.14E1+a.*t).*cos(0.371E1+ ...
  0.265E1.*a.*t)+(-0.10494E1).*sin(0.14E1+a.*t).*sin(0.371E1+ ...
  0.265E1.*a.*t)).*(cos(0.14E1+a.*t).^4.*(0.773346E1.*cos(0.371E1+ ...
  0.265E1.*a.*t).^2+(-0.217626E-15).*sin(0.14E1+a.*t).^2)+ ...
  0.868932E1.*cos(0.14E1+a.*t).^2.*cos(0.371E1+0.265E1.*a.*t).^2.* ...
  sin(0.371E1+0.265E1.*a.*t).^2+0.27531E0.*sin(0.28E1+2.*a.*t).^2.* ...
  sin(0.371E1+0.265E1.*a.*t).^2+(0.174101E-14.*cos(0.371E1+0.265E1.* ...
  a.*t).^2+0.123735E1.*sin(0.14E1+a.*t).^2).*sin(0.371E1+0.265E1.* ...
  a.*t).^4+0.364786E0.*csc(0.14E1+a.*t).^2.*sin(0.28E1+2.*a.*t).^3.* ...
  sin(0.742E1+0.53E1.*a.*t)+0.163949E1.*sin(0.28E1+2.*a.*t).*sin( ...
  0.371E1+0.265E1.*a.*t).^2.*sin(0.742E1+0.53E1.*a.*t)).^(-1/2);sin( ...
  0.371E1+0.265E1.*a.*t).*(0.294776E1.*cos(0.14E1+a.*t).*cos( ...
  0.371E1+0.265E1.*a.*t)+0.111236E1.*sin(0.14E1+a.*t).*sin(0.371E1+ ...
  0.265E1.*a.*t)).*(cos(0.14E1+a.*t).^4.*(0.773346E1.*cos(0.371E1+ ...
  0.265E1.*a.*t).^2+(-0.217626E-15).*sin(0.14E1+a.*t).^2)+ ...
  0.868932E1.*cos(0.14E1+a.*t).^2.*cos(0.371E1+0.265E1.*a.*t).^2.* ...
  sin(0.371E1+0.265E1.*a.*t).^2+0.27531E0.*sin(0.28E1+2.*a.*t).^2.* ...
  sin(0.371E1+0.265E1.*a.*t).^2+(0.174101E-14.*cos(0.371E1+0.265E1.* ...
  a.*t).^2+0.123735E1.*sin(0.14E1+a.*t).^2).*sin(0.371E1+0.265E1.* ...
  a.*t).^4+0.364786E0.*csc(0.14E1+a.*t).^2.*sin(0.28E1+2.*a.*t).^3.* ...
  sin(0.742E1+0.53E1.*a.*t)+0.163949E1.*sin(0.28E1+2.*a.*t).*sin( ...
  0.371E1+0.265E1.*a.*t).^2.*sin(0.742E1+0.53E1.*a.*t)).^(-1/2);0*t]; ...
  
% left wheel velocities
vl = (a.^2.*(0.9801E0.*cos(0.14E1+a.*t).^2+0.110124E1.*sin(0.371E1+ ...
  0.265E1.*a.*t).^2)).^(1/2)+(-1/2).*a.^3.*d.*abs(a).^(-2).*(0.1E1.* ...
  cos(0.14E1+a.*t).^2+0.11236E1.*sin(0.371E1+0.265E1.*a.*t).^2).^( ...
  -3).*((-0.2809E1).*cos(0.14E1+a.*t).^5.*cos(0.371E1+0.265E1.*a.*t) ...
  +(-0.106E1).*cos(0.14E1+a.*t).^4.*sin(0.14E1+a.*t).*sin(0.371E1+ ...
  0.265E1.*a.*t)+(-0.631238E1).*cos(0.14E1+a.*t).^3.*cos(0.371E1+ ...
  0.265E1.*a.*t).*sin(0.371E1+0.265E1.*a.*t).^2+(-0.238203E1).*cos( ...
  0.14E1+a.*t).^2.*sin(0.14E1+a.*t).*sin(0.371E1+0.265E1.*a.*t).^3+( ...
  -0.35463E1).*cos(0.14E1+a.*t).*cos(0.371E1+0.265E1.*a.*t).*sin( ...
  0.371E1+0.265E1.*a.*t).^4+(-0.133823E1).*sin(0.14E1+a.*t).*sin( ...
  0.371E1+0.265E1.*a.*t).^5);

% right wheel velocities
vr = (a.^2.*(0.9801E0.*cos(0.14E1+a.*t).^2+0.110124E1.*sin(0.371E1+ ...
  0.265E1.*a.*t).^2)).^(1/2)+(1/2).*a.^3.*d.*abs(a).^(-2).*(0.1E1.* ...
  cos(0.14E1+a.*t).^2+0.11236E1.*sin(0.371E1+0.265E1.*a.*t).^2).^( ...
  -3).*((-0.2809E1).*cos(0.14E1+a.*t).^5.*cos(0.371E1+0.265E1.*a.*t) ...
  +(-0.106E1).*cos(0.14E1+a.*t).^4.*sin(0.14E1+a.*t).*sin(0.371E1+ ...
  0.265E1.*a.*t)+(-0.631238E1).*cos(0.14E1+a.*t).^3.*cos(0.371E1+ ...
  0.265E1.*a.*t).*sin(0.371E1+0.265E1.*a.*t).^2+(-0.238203E1).*cos( ...
  0.14E1+a.*t).^2.*sin(0.14E1+a.*t).*sin(0.371E1+0.265E1.*a.*t).^3+( ...
  -0.35463E1).*cos(0.14E1+a.*t).*cos(0.371E1+0.265E1.*a.*t).*sin( ...
  0.371E1+0.265E1.*a.*t).^4+(-0.133823E1).*sin(0.14E1+a.*t).*sin( ...
  0.371E1+0.265E1.*a.*t).^5);

% Scale Wheel Velocities to 0 -> 0.3
vlScaled = ((vl - min(vl)) ./ (max(vl) - min(vl))) .* (0.3 - 0) + 0;
vrScaled = ((vr - min(vr)) ./ (max(vr) - min(vr))) .* (0.3 - 0) + 0;

%% Run it on the robot!
pub = rospublisher('/raw_vel');
msg = rosmessage(pub);

pause(); % press kb

for i = 1:length(t)
    X = ['going at:', vlScaled(:,i),vrScaled(:,i)];
    disp(X)
    msg.Data = [vlScaled(:,i) vrScaled(:,i)];
    send(pub, msg);
    pause(.1);
end

msg.Data = [0 0];
send(pub, msg);

%figure()
%plot(r(1,:),r(2,:)),hold on % plot the entire curve
%axis equal